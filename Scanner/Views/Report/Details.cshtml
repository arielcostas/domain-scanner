@using Scanner.Models
@model Scanner.ViewModels.ReportDetailsViewModel
@{
    ViewData["Title"] = "Inicio";
}

<h1>Report @Model.Report.Id for domain @Model.Report.DomainName</h1>

<h2>Details</h2>
<dl>
    <dt>Requested at</dt>
    <dd>@Model.Report.RequestedAt.ToString("yyyy-MM-dd")</dd>

    @if (Model.Report.Status is ReportStatus.Completed or ReportStatus.Failed)
    {
        <dt>Scanned at</dt>
        <dd>@Model.Report.CompletedAt?.ToString("yyyy-MM-dd")</dd>
    }

    <dt>Status</dt>
    <dd>@Model.Report.Status</dd>

    @if (Model.Report.Status == ReportStatus.Failed)
    {
        <dt>Error</dt>
        <dd>@Model.Report.Error</dd>
    }
</dl>

@if (Model.Report.Status == ReportStatus.Completed)
{
    <h2>@Model.Report.NameServers.Length Name servers</h2>
    <ul>
        @foreach (var ns in Model.Report.NameServers)
        {
            <li>
                @ns.Hostname<br>
                @ns.Service.ToString()
            </li>
        }
    </ul>

    <h2>@Model.Report.ApexAddresses.Length Addresses</h2>

    <ul>
        @foreach (var address in Model.Report.ApexAddresses)
        {
            <li>
                @address.Value (@address.ReverseName)<br>
                @address.Asn - @address.OrgName<br>
                @address.City (@address.Region, @address.Country)
            </li>
        }
    </ul>

    <h2>@Model.Report.ApexText.Length Text records</h2>
    <ul>
        @foreach (var text in Model.Report.ApexText)
        {
            <li>@text</li>
        }
    </ul>
}